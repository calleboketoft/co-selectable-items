var VISIBLE_CLASS = 'co-visible';
var CoSelectableItemsPageObject = (function () {
    function CoSelectableItemsPageObject() {
        this.selectableFilter = element(by.id('co-selectable-items-selectable-filter'));
        this.selectedFilter = element(by.id('co-selectable-items-selected-filter'));
        this.selectAllButton = element(by.id('co-selectable-items-select-all'));
        this.deselectAllButton = element(by.id('co-selectable-items-deselect-all'));
        this.selectableList = element(by.id('co-selectable-items-selectable-list'));
        this.selectedList = element(by.id('co-selectable-items-selected-list'));
    }
    CoSelectableItemsPageObject.prototype.getSelectableItems = function () {
        return this.selectableList.all(by.css('li.' + VISIBLE_CLASS));
    };
    CoSelectableItemsPageObject.prototype.getSelectedItems = function () {
        return this.selectedList.all(by.css('li.' + VISIBLE_CLASS));
    };
    // http://stackoverflow.com/questions/27910331/using-protractor-with-loops
    // return items that matches the filter
    CoSelectableItemsPageObject.prototype.getItemsByText = function (items, name) {
        return items.filter(function (elem) {
            return elem.getText().then(function (text) {
                return text === name;
            });
        });
    };
    CoSelectableItemsPageObject.prototype.selectAllItems = function (filterString) {
        if (filterString === void 0) { filterString = ''; }
        this.selectableFilter.clear();
        this.selectableFilter.sendKeys(filterString);
        this.selectAllButton.click();
        this.selectableFilter.clear();
    };
    CoSelectableItemsPageObject.prototype.deselectAllItems = function (filterString) {
        if (filterString === void 0) { filterString = ''; }
        this.selectedFilter.clear();
        this.selectedFilter.sendKeys(filterString);
        this.deselectAllButton.click();
        this.selectedFilter.clear();
    };
    return CoSelectableItemsPageObject;
})();
exports.CoSelectableItemsPageObject = CoSelectableItemsPageObject;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2NvLXNlbGVjdGFibGUtaXRlbXMtY21wLnBhZ2Utb2JqZWN0LnRzIl0sIm5hbWVzIjpbIkNvU2VsZWN0YWJsZUl0ZW1zUGFnZU9iamVjdCIsIkNvU2VsZWN0YWJsZUl0ZW1zUGFnZU9iamVjdC5jb25zdHJ1Y3RvciIsIkNvU2VsZWN0YWJsZUl0ZW1zUGFnZU9iamVjdC5nZXRTZWxlY3RhYmxlSXRlbXMiLCJDb1NlbGVjdGFibGVJdGVtc1BhZ2VPYmplY3QuZ2V0U2VsZWN0ZWRJdGVtcyIsIkNvU2VsZWN0YWJsZUl0ZW1zUGFnZU9iamVjdC5nZXRJdGVtc0J5VGV4dCIsIkNvU2VsZWN0YWJsZUl0ZW1zUGFnZU9iamVjdC5zZWxlY3RBbGxJdGVtcyIsIkNvU2VsZWN0YWJsZUl0ZW1zUGFnZU9iamVjdC5kZXNlbGVjdEFsbEl0ZW1zIl0sIm1hcHBpbmdzIjoiQUFJQSxJQUFNLGFBQWEsR0FBRyxZQUFZLENBQUE7QUFFbEM7SUFBQUE7UUFFU0MscUJBQWdCQSxHQUFHQSxPQUFPQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSx1Q0FBdUNBLENBQUNBLENBQUNBLENBQUNBO1FBQzNFQSxtQkFBY0EsR0FBR0EsT0FBT0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EscUNBQXFDQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUN2RUEsb0JBQWVBLEdBQUdBLE9BQU9BLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLGdDQUFnQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDbkVBLHNCQUFpQkEsR0FBR0EsT0FBT0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0Esa0NBQWtDQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUN2RUEsbUJBQWNBLEdBQUdBLE9BQU9BLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLHFDQUFxQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDdkVBLGlCQUFZQSxHQUFHQSxPQUFPQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxtQ0FBbUNBLENBQUNBLENBQUNBLENBQUNBO0lBaUM1RUEsQ0FBQ0E7SUEvQkNELHdEQUFrQkEsR0FBbEJBO1FBQ0VFLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLENBQUNBLEtBQUtBLEdBQUdBLGFBQWFBLENBQUNBLENBQUNBLENBQUFBO0lBQy9EQSxDQUFDQTtJQUVERixzREFBZ0JBLEdBQWhCQTtRQUNFRyxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxZQUFZQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxDQUFDQSxHQUFHQSxDQUFDQSxLQUFLQSxHQUFHQSxhQUFhQSxDQUFDQSxDQUFDQSxDQUFBQTtJQUM3REEsQ0FBQ0E7SUFFREgsMEVBQTBFQTtJQUMxRUEsdUNBQXVDQTtJQUN2Q0Esb0RBQWNBLEdBQWRBLFVBQWVBLEtBQUtBLEVBQUVBLElBQVlBO1FBQ2hDSSxNQUFNQSxDQUFDQSxLQUFLQSxDQUFDQSxNQUFNQSxDQUFDQSxVQUFDQSxJQUFJQTtZQUN2QkEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsT0FBT0EsRUFBRUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsVUFBQ0EsSUFBSUE7Z0JBQzlCQSxNQUFNQSxDQUFDQSxJQUFJQSxLQUFLQSxJQUFJQSxDQUFBQTtZQUN0QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQUE7UUFDSkEsQ0FBQ0EsQ0FBQ0EsQ0FBQUE7SUFDSkEsQ0FBQ0E7SUFFREosb0RBQWNBLEdBQWRBLFVBQWVBLFlBQXlCQTtRQUF6QkssNEJBQXlCQSxHQUF6QkEsaUJBQXlCQTtRQUN0Q0EsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxLQUFLQSxFQUFFQSxDQUFBQTtRQUM3QkEsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxRQUFRQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFBQTtRQUM1Q0EsSUFBSUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsS0FBS0EsRUFBRUEsQ0FBQUE7UUFDNUJBLElBQUlBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsS0FBS0EsRUFBRUEsQ0FBQUE7SUFDL0JBLENBQUNBO0lBRURMLHNEQUFnQkEsR0FBaEJBLFVBQWlCQSxZQUF5QkE7UUFBekJNLDRCQUF5QkEsR0FBekJBLGlCQUF5QkE7UUFDeENBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLEtBQUtBLEVBQUVBLENBQUFBO1FBQzNCQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxRQUFRQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFBQTtRQUMxQ0EsSUFBSUEsQ0FBQ0EsaUJBQWlCQSxDQUFDQSxLQUFLQSxFQUFFQSxDQUFBQTtRQUM5QkEsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsS0FBS0EsRUFBRUEsQ0FBQUE7SUFDN0JBLENBQUNBO0lBQ0hOLGtDQUFDQTtBQUFEQSxDQXhDQSxBQXdDQ0EsSUFBQTtBQXhDWSxtQ0FBMkIsOEJBd0N2QyxDQUFBIiwiZmlsZSI6InRlc3QvZTJlL2NvLXNlbGVjdGFibGUtaXRlbXMtY21wLnBhZ2Utb2JqZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZ2xvYmFscyBmcm9tIHByb3RyYWN0b3JcbmRlY2xhcmUgdmFyIGVsZW1lbnQ6YW55XG5kZWNsYXJlIHZhciBieTphbnlcblxuY29uc3QgVklTSUJMRV9DTEFTUyA9ICdjby12aXNpYmxlJ1xuXG5leHBvcnQgY2xhc3MgQ29TZWxlY3RhYmxlSXRlbXNQYWdlT2JqZWN0IHtcblxuICBwdWJsaWMgc2VsZWN0YWJsZUZpbHRlciA9IGVsZW1lbnQoYnkuaWQoJ2NvLXNlbGVjdGFibGUtaXRlbXMtc2VsZWN0YWJsZS1maWx0ZXInKSk7XG4gIHB1YmxpYyBzZWxlY3RlZEZpbHRlciA9IGVsZW1lbnQoYnkuaWQoJ2NvLXNlbGVjdGFibGUtaXRlbXMtc2VsZWN0ZWQtZmlsdGVyJykpO1xuICBwdWJsaWMgc2VsZWN0QWxsQnV0dG9uID0gZWxlbWVudChieS5pZCgnY28tc2VsZWN0YWJsZS1pdGVtcy1zZWxlY3QtYWxsJykpO1xuICBwdWJsaWMgZGVzZWxlY3RBbGxCdXR0b24gPSBlbGVtZW50KGJ5LmlkKCdjby1zZWxlY3RhYmxlLWl0ZW1zLWRlc2VsZWN0LWFsbCcpKTtcbiAgcHVibGljIHNlbGVjdGFibGVMaXN0ID0gZWxlbWVudChieS5pZCgnY28tc2VsZWN0YWJsZS1pdGVtcy1zZWxlY3RhYmxlLWxpc3QnKSk7XG4gIHB1YmxpYyBzZWxlY3RlZExpc3QgPSBlbGVtZW50KGJ5LmlkKCdjby1zZWxlY3RhYmxlLWl0ZW1zLXNlbGVjdGVkLWxpc3QnKSk7XG5cbiAgZ2V0U2VsZWN0YWJsZUl0ZW1zKCkge1xuICAgIHJldHVybiB0aGlzLnNlbGVjdGFibGVMaXN0LmFsbChieS5jc3MoJ2xpLicgKyBWSVNJQkxFX0NMQVNTKSlcbiAgfVxuXG4gIGdldFNlbGVjdGVkSXRlbXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRMaXN0LmFsbChieS5jc3MoJ2xpLicgKyBWSVNJQkxFX0NMQVNTKSlcbiAgfVxuXG4gIC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjc5MTAzMzEvdXNpbmctcHJvdHJhY3Rvci13aXRoLWxvb3BzXG4gIC8vIHJldHVybiBpdGVtcyB0aGF0IG1hdGNoZXMgdGhlIGZpbHRlclxuICBnZXRJdGVtc0J5VGV4dChpdGVtcywgbmFtZTogc3RyaW5nKSB7XG4gICAgcmV0dXJuIGl0ZW1zLmZpbHRlcigoZWxlbSkgPT4ge1xuICAgICAgcmV0dXJuIGVsZW0uZ2V0VGV4dCgpLnRoZW4oKHRleHQpID0+IHtcbiAgICAgICAgcmV0dXJuIHRleHQgPT09IG5hbWVcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxuXG4gIHNlbGVjdEFsbEl0ZW1zKGZpbHRlclN0cmluZzogc3RyaW5nID0gJycpIHtcbiAgICB0aGlzLnNlbGVjdGFibGVGaWx0ZXIuY2xlYXIoKVxuICAgIHRoaXMuc2VsZWN0YWJsZUZpbHRlci5zZW5kS2V5cyhmaWx0ZXJTdHJpbmcpXG4gICAgdGhpcy5zZWxlY3RBbGxCdXR0b24uY2xpY2soKVxuICAgIHRoaXMuc2VsZWN0YWJsZUZpbHRlci5jbGVhcigpXG4gIH1cblxuICBkZXNlbGVjdEFsbEl0ZW1zKGZpbHRlclN0cmluZzogc3RyaW5nID0gJycpIHtcbiAgICB0aGlzLnNlbGVjdGVkRmlsdGVyLmNsZWFyKClcbiAgICB0aGlzLnNlbGVjdGVkRmlsdGVyLnNlbmRLZXlzKGZpbHRlclN0cmluZylcbiAgICB0aGlzLmRlc2VsZWN0QWxsQnV0dG9uLmNsaWNrKClcbiAgICB0aGlzLnNlbGVjdGVkRmlsdGVyLmNsZWFyKClcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvbm9kZV9tb2R1bGVzIn0=
